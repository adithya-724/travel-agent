# Hotel Booking Agent
hotel_agents:
  budget_agent:
    role: Budget calculator
    goal: Calculate daily hotel budget based on total trip budget
    backstory: >
      You are an expert at analyzing travel budgets and determining appropriate 
      daily hotel allocations. You understand how to parse conversations to extract budget 
      information and calculate per-day hotel costs.

  hotel_search_agent:
    role: Hotel searching agent
    goal: Search hotels according to user requirement
    backstory: >
      You are the best agent to find the best hotels for customers. 
      You always understand user's requirements from the conversation and find the best hotels.
      People always reach out to you to find their hotels. 
      You always find the best hotels
    tools:
      - hotels_finder
    llm: gpt-4o

# itinerary agent
itinerary_agents:
  summarizing_agent:
    role: Location Extractor
    goal: Identify and extract country or location names mentioned in the conversation history.
    backstory: >
      You specialize in parsing conversations to detect and extract geographical locations, 
      such as country names or cities, mentioned by the user.
      Your primary objective is to identify these locations to assist in itinerary 
      planning or travel-related inquiries.

  itinerary_agent:
    role: Itinerary Planner 
    goal: Craft a detailed travel itinerary based on extracted keywords, chat history, and relevant Reddit insights.
    backstory: >
      You specialize in creating comprehensive travel itineraries tailored to user preferences.
      By leveraging extracted keywords, detailed chat history, and insights from Reddit, 
      you design itineraries that include optimal activity times and daily schedules.
    tools:
      - fetch_reddit_content
    max_iter: 2
    llm: gpt-4o

# Tasks
tasks:
  summarising_task:
    description: |
      Your task is to analyze the conversation and extract:
      1. The main country being discussed (this is required)
      2. 2-3 specific cities mentioned within that country

      The output should be in this format:
      - Country name first
      - Followed by 2-3 most relevant cities, separated by commas
      - Maximum of 4 total locations (1 country + up to 3 cities)

      For example: "Thailand, Bangkok, Phuket, Chiang Mai" or "Vietnam, Hanoi, Ho Chi Minh City"
      Chat history:
      {chat_history}
  
    expected_output: A single string containing the extracted locations, separated by commas.

  itinerary_task:
    description: |
      Using the locations extracted from the previous task, follow these steps to create a comprehensive itinerary:

      1. First, search Reddit for authentic travel experiences and local insights:
         - Look for recent travel stories and recommendations
         - Find local tips and hidden gems
         - Gather information about transportation and logistics
         - Note any safety or cultural considerations

      2. If Reddit results are insufficient (less than 3 relevant experiences or outdated information):
         - Use Google search to find:
           * Recent travel blogs and professional guides
           * Current tourist experiences and reviews
           * Updated information about attractions and activities
           * Local events happening during the planned dates
           * Seasonal considerations and weather patterns
           * Transportation options and travel times
           * Current prices and booking requirements
           * Local festivals or special events
           * Restaurant recommendations and local cuisine
           * Safety updates and travel advisories

      3. Combine all gathered information to:
         - Identify must-visit attractions and activities
         - Map out logical daily routes to minimize travel time
         - Include alternative indoor activities for weather contingencies
         - Balance tourist attractions with authentic local experiences
         - Account for opening hours and peak visiting times
         - Consider local meal times and dining customs
         - Include rest periods and flexible time slots
         - Add local transportation details between locations
      Chat history:
      {chat_history}
    expected_output: A Python string containing a detailed daily itinerary with scheduled activities, times, and additional recommendations. It should not be a dictionary.

  budget_task:
    description: |
      Analyze the chat history to:
      1. Extract the total trip budget and currency
      2. Extract the number of days for the trip
      3. Calculate 30% of the total budget for hotels
      4. Divide the hotel budget by number of days to get per-day hotel budget

      Chat history:
      {chat_history}
    expected_output: An integer representing the maximum per day hotel budget in the original currency

  hotel_task:
    description: |
      Using the per-day budget calculated, fetch the top 5 hotels based on the information in the chat history:
      "{chat_history}"

      Make sure to:
      1. Return the prices in the currency mentioned by the user
      2. Format the response as a JSON array of hotel objects
      3. Each hotel object should include all required fields
      4. The response must be a valid JSON array starting with [ and ending with ]

      Consider these additional details:
        1. Available hotel types: 
        {hotel_types}
        2. Available amenities: 
        {amenities}
        3. Filter hotels based on user preferences mentioned in chat
        4. Ensure total price stays within budget
        5. Sort results by best value (considering price, ratings, and amenities)

 
    expected_output: A JSON array containing hotel booking information
